Index: src/app/api/v1/password/route.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import {NextRequest, NextResponse} from \"next/server\";\r\nimport {generatePasswords} from \"../../../../../util/functions\";\r\n\r\nexport async function GET(request: NextRequest) {\r\n    try {\r\n        const {searchParams} = new URL(request.url);\r\n        const length = searchParams.get('length');\r\n        const amount = searchParams.get('amount');\r\n\r\n        if (!length || !amount) {\r\n            return NextResponse.json({error: 'Missing length or amount parameters'}, {status: 400});\r\n        }\r\n        return NextResponse.json(generatePasswords(length, amount));\r\n\r\n    } catch (error) {\r\n        console.error('Error:', error);\r\n        return NextResponse.json({\r\n            error: \"Failed to generate passwords, please try again or contact administrator.\"\r\n        }, {status: 500});\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/app/api/v1/password/route.ts b/src/app/api/v1/password/route.ts
--- a/src/app/api/v1/password/route.ts	(revision e52412f4bab3e02cb304d7b3ef17ca7271ee2034)
+++ b/src/app/api/v1/password/route.ts	(date 1734497778442)
@@ -1,5 +1,5 @@
 import {NextRequest, NextResponse} from "next/server";
-import {generatePasswords} from "../../../../../util/functions";
+import {Worker} from 'worker_threads';
 
 export async function GET(request: NextRequest) {
     try {
@@ -10,7 +10,24 @@
         if (!length || !amount) {
             return NextResponse.json({error: 'Missing length or amount parameters'}, {status: 400});
         }
-        return NextResponse.json(generatePasswords(length, amount));
+
+        const worker = new Worker(new URL('../../../../../util/worker.js', import.meta.url), {
+            workerData: {
+                length,
+                amount
+            }
+        });
+
+        return new Promise((resolve) => {
+            worker.on('message', (passwords) => {
+                resolve(NextResponse.json(passwords));
+            });
+
+            worker.on('error', (error) => {
+                console.error('Worker error:', error);
+                resolve(NextResponse.json({error: 'Failed to generate passwords'}, {status: 500}));
+            });
+        });
 
     } catch (error) {
         console.error('Error:', error);
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"9d0cb285-459a-4068-982c-a98020bf4705\" name=\"Changes\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/next.config.ts\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/next.config.ts\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/package.json\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/package.json\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/app/api/v1/csv/route.ts\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/app/api/v1/csv/route.ts\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/app/api/v1/password/route.ts\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/app/api/v1/password/route.ts\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"worker\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GoLibraries\">\r\n    <option name=\"indexEntireGoPath\" value=\"true\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 8\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2qMscguu4rPsok8XAbTTrejxAjV\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"autoscrollFromSource\" value=\"true\" />\r\n    <option name=\"autoscrollToSource\" value=\"true\" />\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"openDirectoriesWithSingleClick\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"RunOnceActivity.go.formatter.settings.were.checked\": \"true\",\r\n    \"RunOnceActivity.go.migrated.go.modules.settings\": \"true\",\r\n    \"git-widget-placeholder\": \"master\",\r\n    \"go.import.settings.migrated\": \"true\",\r\n    \"kotlin-language-version-configured\": \"true\",\r\n    \"last_opened_file_path\": \"C:/Users/Revan/IdeaProjects/nepokor\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.detected.package.tslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"nodejs_package_manager_path\": \"npm\",\r\n    \"ts.external.directory.path\": \"C:\\\\Users\\\\Revan\\\\IdeaProjects\\\\! interview\\\\midasai\\\\node_modules\\\\typescript\\\\lib\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Revan\\IdeaProjects\\! interview\\midasai\\util\" />\r\n      <recent name=\"C:\\Users\\Revan\\IdeaProjects\\! interview\\midasai\\public\" />\r\n      <recent name=\"C:\\Users\\Revan\\IdeaProjects\\! interview\\midasai\\src\" />\r\n      <recent name=\"C:\\Users\\Revan\\IdeaProjects\\! interview\\midasai\" />\r\n      <recent name=\"C:\\Users\\Revan\\IdeaProjects\\! interview\\midasai\\src\\app\\api\\v1\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration default=\"true\" type=\"GoApplicationRunConfiguration\" factoryName=\"Go Application\">\r\n      <module name=\"midasai\" />\r\n      <working_directory value=\"$PROJECT_DIR$\" />\r\n      <go_parameters value=\"-i\" />\r\n      <kind value=\"FILE\" />\r\n      <directory value=\"$PROJECT_DIR$\" />\r\n      <filePath value=\"$PROJECT_DIR$\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"GoTestRunConfiguration\" factoryName=\"Go Test\">\r\n      <module name=\"midasai\" />\r\n      <working_directory value=\"$PROJECT_DIR$\" />\r\n      <go_parameters value=\"-i\" />\r\n      <kind value=\"DIRECTORY\" />\r\n      <directory value=\"$PROJECT_DIR$\" />\r\n      <filePath value=\"$PROJECT_DIR$\" />\r\n      <framework value=\"gotest\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"9d0cb285-459a-4068-982c-a98020bf4705\" name=\"Changes\" comment=\"\" />\r\n      <created>1734483860133</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1734483860133</updated>\r\n      <workItem from=\"1734483861116\" duration=\"378000\" />\r\n      <workItem from=\"1734484252652\" duration=\"3756000\" />\r\n      <workItem from=\"1734488030060\" duration=\"395000\" />\r\n      <workItem from=\"1734488438359\" duration=\"1077000\" />\r\n      <workItem from=\"1734489525776\" duration=\"8121000\" />\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n    <option name=\"exactExcludedFiles\">\r\n      <list>\r\n        <option value=\"$PROJECT_DIR$/tailwind.config.js\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"VgoProject\">\r\n    <integration-enabled>false</integration-enabled>\r\n    <settings-migrated>true</settings-migrated>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision e52412f4bab3e02cb304d7b3ef17ca7271ee2034)
+++ b/.idea/workspace.xml	(date 1734497779040)
@@ -6,9 +6,6 @@
   <component name="ChangeListManager">
     <list default="true" id="9d0cb285-459a-4068-982c-a98020bf4705" name="Changes" comment="">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/next.config.ts" beforeDir="false" afterPath="$PROJECT_DIR$/next.config.ts" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/package.json" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/app/api/v1/csv/route.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/app/api/v1/csv/route.ts" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/app/api/v1/password/route.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/app/api/v1/password/route.ts" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
@@ -103,7 +100,7 @@
       <workItem from="1734484252652" duration="3756000" />
       <workItem from="1734488030060" duration="395000" />
       <workItem from="1734488438359" duration="1077000" />
-      <workItem from="1734489525776" duration="8121000" />
+      <workItem from="1734489525776" duration="8182000" />
     </task>
     <servers />
   </component>
Index: util/worker.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/util/worker.js b/util/worker.js
new file mode 100644
--- /dev/null	(date 1734497783405)
+++ b/util/worker.js	(date 1734497783405)
@@ -0,0 +1,26 @@
+const {parentPort, workerData} = require('worker_threads');
+
+const {v4} = require("uuid");
+
+const sanitizeUUID = (uuid) => uuid.replace(/-/g, '');
+
+const generateUniquePassword = (length) => {
+    let uuid = '';
+    while (uuid.length < length) {
+        uuid += sanitizeUUID(v4()).substring(0, length - uuid.length);
+    }
+    return uuid;
+};
+
+const generatePasswords = (length, amount) => {
+    const passwords = new Set();
+
+    while (passwords.size < amount) {
+        passwords.add(generateUniquePassword(length));
+    }
+
+    return Array.from(passwords);
+};
+
+const result = generatePasswords(workerData.length, workerData.amount);
+parentPort.postMessage(result);
\ No newline at end of file
